name: Generate Matrix

on:
  workflow_call:
    outputs:
      matrix:
        description: "Matrix of changed repos"
        value: ${{ jobs.generate-matrix.outputs.matrix }}
      repositories:
        description: "All repositories"
        value: ${{ jobs.generate-matrix.outputs.repositories }}
      artifacts:
        description: "Artifacts for changed repos"
        value: ${{ jobs.generate-matrix.outputs.artifacts }}

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
      repositories: ${{ steps.repo-matrix.outputs.repositories }}
      artifacts: ${{ steps.generate.outputs.artifacts }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}

      - name: Compute diff refs
        id: compute-refs
        run: |
          set -e
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.after || github.event.pull_request.head.sha }}
          # Ensure we have both the base and head commits
          git fetch --depth=1 origin $BASE_SHA
          git fetch --depth=1 origin $HEAD_SHA
          echo "BASE_SHA=$BASE_SHA" >> $GITHUB_ENV
          echo "HEAD_SHA=$HEAD_SHA" >> $GITHUB_ENV
          echo "Diff will compare main ($BASE_SHA) with $HEAD_SHA"

      - name: Generate repository matrix
        id: repo-matrix
        uses: ./.github/actions/generate-repo-matrix
        with:
          repoRoot: "."

      - name: Build changed project matrix
        id: generate
        run: |
          set -e
          # Get repository names and check for changes
          repositories_json='${{ steps.repo-matrix.outputs.repositories }}'
          changed_repos=()
          # Check each repository for changes
          while IFS= read -r repo; do
            if git diff --name-only $BASE_SHA $HEAD_SHA | grep "^$repo/" > /dev/null 2>&1; then
              changed_repos+=("$repo")
            fi
          done < <(echo "$repositories_json" | jq -r 'keys[]')
          if [ ${#changed_repos[@]} -eq 0 ]; then
            echo "No changes detected for any project"
            echo "matrix=" >> $GITHUB_OUTPUT
            echo "artifacts={}" >> $GITHUB_OUTPUT
          else
            # Convert changed repos array to JSON
            changed_repos_json=$(printf '%s\n' "${changed_repos[@]}" | jq -R . | jq -s .)
            matrixJson=$(echo "$changed_repos_json" | jq -c '{"repo": .}')
            # Generate artifacts JSON with workspace prefix
            artifacts_json=$(echo "$repositories_json" | jq -c \
              --argjson changed_repos "$changed_repos_json" \
              --arg workspace "${{ github.workspace }}" \
              'to_entries |
                map(select(.key as $repo | $changed_repos | index($repo) != null)) |
                from_entries |
                with_entries(.key as $repo | .value = (.value["e2e-artifacts"] | map($workspace + "/" + $repo + "/" + .) | join("\n")))')
            echo "matrix=$matrixJson" >> $GITHUB_OUTPUT
            echo "artifacts=$artifacts_json" >> $GITHUB_OUTPUT
          fi
          echo "Matrix: $matrixJson"
          echo "Artifacts: $artifacts_json"
